# Cero3 Shaper
# A cake shaper and AQM solution that allows several diffserv marking schemes
# for ethernet gateways

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
#       Copyright (C) 2012-5 Michael D. Taht, Toke Høiland-Jørgensen, Sebastian Moeller


#sm: TODO pass in the cake diffserv keyword

. ${SQM_LIB_DIR}/defaults.sh
QDISC=cake

# Default traffic classication is passed in INGRESS_CAKE_OPTS and EGRESS_CAKE_OPTS, defined in defaults.sh now


egress() {
    SILENT=1 $TC qdisc del dev $IFACE root
    $TC qdisc add dev $IFACE root $( get_stab_string ) cake \
        bandwidth ${UPLINK}kbit $( get_cake_lla_string ) ${EGRESS_CAKE_OPTS} ${EQDISC_OPTS}
}


ingress() {

    SILENT=1 $TC qdisc del dev $IFACE handle ffff: ingress
    $TC qdisc add dev $IFACE handle ffff: ingress

    SILENT=1 $TC qdisc del dev $DEV root

    [ "$IGNORE_DSCP_INGRESS" -eq "1" ] && INGRESS_CAKE_OPTS="$INGRESS_CAKE_OPTS besteffort"
    [ "$ZERO_DSCP_INGRESS" -eq "1" ] && INGRESS_CAKE_OPTS="$INGRESS_CAKE_OPTS wash"

    $TC qdisc add dev $DEV root $( get_stab_string ) cake \
        bandwidth ${DOWNLINK}kbit $( get_cake_lla_string ) ${INGRESS_CAKE_OPTS} ${IQDISC_OPTS}

    $IP link set dev $DEV up

    # redirect all IP packets arriving in $IFACE to ifb0
    # DSCPClassify specific code: set DSCP mark from conntrack mark

    # +FIX to SQM: see dscpclassify commit cbfd72d 
    # layer_cake_ct.qos: improve filter parameters
    # Use 'matchall' filter type to match all packets 
    # instead of u32 matching on everything.
    # Remove flowid 1:1 as this can make cake 'flow blind'
    # https://lists.bufferbloat.net/pipermail/cake/2019-September/005031.html

    $TC filter add dev $IFACE parent ffff: matchall \
    action ctinfo dscp 0x0000003f mirred egress redirect dev $DEV

	# if 'wg show' reports an endpoint, capture all VPN packets and redirect back up to WAN ifb for Cake
	ifb_wan="ifb4eth0" # need a generic way to set this off the WAN SQM profile
	wg_endpoint=$(wg show | awk '{if($1 == "endpoint:"){split($2,a,":"); print a[1]}}')
	if [ ! -z "$wg_endpoint" ]; then
		tc qdisc add dev $IFACE handle ffff: ingress
		tc filter add dev $IFACE parent ffff: matchall action mirred egress redirect dev $ifb_wan
	fi
}

sqm_prepare_script() {
    do_modules
    verify_qdisc $QDISC "cake" || return 1
}
